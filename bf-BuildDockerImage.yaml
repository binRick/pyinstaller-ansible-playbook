x-reference-data:
  MAX-PARALLEL-COMMANDS: &MAX-PARALLEL-COMMANDS 4
  env: &env

  vars: &vars
    DOCKER_FILE: unknown
    ANSIBLE_VERSION: 4.9.0

    $include: distros.yaml
    $include: all_distros.yaml

    distro-vars: &distro-vars
        fedora33: { DOCKER_FILE: Dockerfile.fedora33, DOCKER_IMAGE: 'fedora:33' }
        fedora34: { DOCKER_FILE: Dockerfile.fedora34, DOCKER_IMAGE: 'fedora:34' }
        fedora35: { DOCKER_FILE: Dockerfile.fedora35, DOCKER_IMAGE: 'fedora:35' }

        ubuntu20: { DOCKER_FILE: Dockerfile.ubuntu20, DOCKER_IMAGE: 'ubuntu:20.04' }
        ubuntu21: { DOCKER_FILE: Dockerfile.ubuntu21, DOCKER_IMAGE: 'ubuntu:20.10' }

        alpine315: { DOCKER_FILE: Dockerfile.alpine315, DOCKER_IMAGE: 'alpine:3.15' }

        debian10: { DOCKER_FILE: Dockerfile.debian10, DOCKER_IMAGE: 'debian:10' }
        debian11: { DOCKER_FILE: Dockerfile.debian11, DOCKER_IMAGE: 'debian:11' }

        centos7: { DOCKER_FILE: Dockerfile.centos7, DOCKER_IMAGE: 'centos:7' }
        centos8: { DOCKER_FILE: Dockerfile.centos8, DOCKER_IMAGE: 'centos:8' }
        '*':
          DOCKER_PATH: .
          DOCKER_MODE: build
          DOCKER_LABEL: ansible
          ANSIBLE_PATH: /compile/dist/ansible
          ANSIBLE_PLAYBOOK_PATH: /compile/dist/ansible-playbook
          ANSIBLE_DEST: ./binaries
          DOCKER_HUB: docker.io

config:
  show-summary-errors: yes
  show-summary-steps: yes
  show-summary-footer: yes
  show-summary-times: yes

  stop-on-failure: yes
  ignore-failure: no
  show-failure-report: yes

  success-status-color: 30
  running-status-color: 200
  pending-status-color: 220
  error-status-color: 180

  show-task-times: yes
  show-task-output: yes

  single-line: no
  bullet-char: "â€¢"
  replica-replace-pattern: '%'
  collapse-on-completion: yes
  event-driven: yes
t 
  max-parallel-commands: *MAX-PARALLEL-COMMANDS
  vars: *vars
  log-path: /tmp/ansible-docker-images.log

tasks:
  - name: Download Ansible Tarballs
    tags: [download]
    parallel-tasks:
    - name: Download Ansible Tarball 
      pre-cmd: "[[ -d src ]] || mkdir -p src"
      env: *env
      vars: *vars
      cmd: eval "[[ -f src/ansible-{{ANSIBLE_VERSION}}.tar.gz ]] || wget https://files.pythonhosted.org/packages/6c/6a/d2729c854d5487f4c8e18a72eadf53287a2aa16d7924df39751025592ab9/ansible-{{ANSIBLE_VERSION}}.tar.gz -O src/ansible-{{ANSIBLE_VERSION}}.tar.gz"

  - name: Build Docker Images
    tags: [build]
    parallel-tasks:
    - name: Build Docker Image %
      stdout-log: /tmp/ansible-docker-image-%-stdout.log
      stderr-log: /tmp/ansible-docker-image-%-stderr.log
      for-each-list: *distros
      apply-each-vars: *distro-vars
      env: *env
      vars: *vars

      pre-cmd: |
        eval "[[ -f \"{{ANSIBLE_DEST}}/%/ansible-playbook\" ]] && [[ -f \"{{ANSIBLE_DEST}}/%/ansible\" ]] && exit 0"
        [[ -d "{{ANSIBLE_DEST}}/%" ]] || mkdir -p "{{ANSIBLE_DEST}}/%"
        eval "docker images --filter 'reference={{DOCKER_IMAGE}}' || command docker pull {{DOCKER_HUB}}/{{DOCKER_IMAGE}}"
      cmd: |
        eval "command docker build --build-arg=ANSIBLE_VERSION={{ANSIBLE_VERSION}} --target=%-{{DOCKER_LABEL}} --tag=%-{{DOCKER_LABEL}} --file={{DOCKER_FILE}} --label={{DOCKER_LABEL}} --pull=false {{DOCKER_PATH}} || exit 1"
        eval "cid=$(command docker create %-{{DOCKER_LABEL}}) || exit 1"
        eval "command docker cp $cid:{{ANSIBLE_PATH}} {{ANSIBLE_DEST}}/%/ansible || exit 1"
        eval "command docker cp $cid:{{ANSIBLE_PLAYBOOK_PATH}} {{ANSIBLE_DEST}}/%/ansible-playbook || exit 1"
      post-cmd: |
        eval "[[ -f \"{{ANSIBLE_DEST}}/%/ansible-playbook\" ]] && [[ -f \"{{ANSIBLE_DEST}}/%/ansible\" ]] || exit 2"
        eval "{{ANSIBLE_DEST}}/%/ansible-playbook --version"
        eval "{{ANSIBLE_DEST}}/%/ansible --version"
        eval "{{ANSIBLE_DEST}}/%/ansible all -i localhost, -c local -m setup"
        eval "ls {{ANSIBLE_DEST}}/%/ansible {{ANSIBLE_DEST}}/%/ansible-playbook && echo OK"
      when:
        - "{{ITEM}} == {{ITEM}}"
#        - "{{ITEM}} == {{SPECIFIED_DISTRO}}"

