x-reference-data:
  env: &env
      DOCKER_XYZ: abc123

  vars: &vars
      DOCKER_FILE: unknown

  distros: &distros
      -
        - fedora35
        - fedora34
        - fedora33
        - fedora32
      -
        - alpine
      -
        - debian
      -
        - ubuntu
      -
        - centos8
        - centos7

  distro-vars: &distro-vars
      fedora35: { DOCKER_FILE: Dockerfile.fedora35, DOCKER_IMAGE: 'fedora:35' }
      fedora34: { DOCKER_FILE: Dockerfile.fedora34, DOCKER_IMAGE: 'fedora:34' }
      fedora33: { DOCKER_FILE: Dockerfile.fedora33, DOCKER_IMAGE: 'fedora:33' }
      fedora32: { DOCKER_FILE: Dockerfile.fedora33, DOCKER_IMAGE: 'fedora:32' }
      ubuntu: { DOCKER_FILE: Dockerfile.ubuntu, DOCKER_IMAGE: 'ubuntu:latest' }
      alpine: { DOCKER_FILE: Dockerfile.alpine, DOCKER_IMAGE: 'alpine:latest' }
      centos7: { DOCKER_FILE: Dockerfile.centos7, DOCKER_IMAGE: 'centos:7' }
      centos8: { DOCKER_FILE: Dockerfile.centos8, DOCKER_IMAGE: 'centos:8' }
      debian: { DOCKER_FILE: Dockerfile.debian, DOCKER_IMAGE: 'debian:latest' }
      '*':
        DOCKER_PATH: .
        DOCKER_MODE: build
        DOCKER_LABEL: ansible
        ANSIBLE_PATH: /compile/dist/ansible
        ANSIBLE_PLAYBOOK_PATH: /compile/dist/ansible-playbook
        ANSIBLE_DEST: ./binaries

config:
  replica-replace-pattern: '%'
  max-parallel-commands: 10
  show-failure-report: yes
  ignore-failure: no
  vars: *vars
  show-task-times: yes
  log-path: /tmp/ansible-docker-images.log
tasks:
  - name: Build Docker Images
    tags: [build]
    parallel-tasks:
    - name: Build Docker Image %
      stdout-log: /tmp/ansible-docker-image-%-stdout.log
      stderr-log: /tmp/ansible-docker-image-%-stderr.log
      for-each-list: *distros
      apply-each-vars: *distro-vars
      env: *env
      vars:
        SPECIFIED_DISTRO: centos8

      pre-cmd: eval "command docker pull docker.io/{{DOCKER_IMAGE}}"
      cmd: eval "command docker build --target=%-{{DOCKER_LABEL}} --tag=%-{{DOCKER_LABEL}} --file={{DOCKER_FILE}} --label={{DOCKER_LABEL}} --pull=false {{DOCKER_PATH}}"
      post-cmd: |
        [[ -d "{{ANSIBLE_DEST}}/%" ]] || mkdir -p "{{ANSIBLE_DEST}}/%"
        cid=$(command docker create %-{{DOCKER_LABEL}})
        cmd="command docker cp $cid:{{ANSIBLE_PATH}} {{ANSIBLE_DEST}}/%/."
        cmd="$cmd && command docker cp $cid:{{ANSIBLE_PLAYBOOK_PATH}} {{ANSIBLE_DEST}}/%/."
        echo -e "cid=$cid|cmd=$cmd"
        eval "$cmd"
        eval {{ANSIBLE_DEST}}/%/ansible --version
        eval {{ANSIBLE_DEST}}/%/ansible-playbook --version
        >&2 echo % OK- {{ANSIBLE_DEST}}/%/ansible {{ANSIBLE_DEST}}/%/ansible-playbook
      when:
        - "{{ITEM}} == {{SPECIFIED_DISTRO}}"

